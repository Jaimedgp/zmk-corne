/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
        chosen {
          zmk,matrix_transform = &five_column_transform;
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";
            config_layer {
                if-layers = <1 2>;
                then-layer = <5>;
            };
        };

        // behaviors {
        //     as: auto_shift {
        //         compatible = "zmk,behavior-hold-tap";
        //         #binding-cells = <2>;
        //         tapping_term_ms = <200>;
        //         quick_tap_ms = <0>;
        //         flavor = "tap-preferred";
        //         bindings = <&kp>, <&kp>;
        //     };
        // };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |xxx|  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |xxx|  H  |  J   |  K  |  L  | ALT |
// |  Z  |  X  |  C  |  V  |  B  |xxx|  N  |  M   |  ,  |  .  |  ;  |
//    | CTRL,DEL | 1,TAB | 3,ENT |xxx| 4,SPC | 2,BCKSPC | SHFT,ESC |
// -----------------------------------------------------------------------------------------
                        bindings = <
       &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U  &kp I     &kp O   &kp P
       &kp A &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K     &kp L   &kp LALT
       &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M  &kp COMMA &kp DOT &kp SEMI
   &mt LCTRL DEL &lt 1 TAB &lt 3 RET       &lt 4 SPC &lt 2 BSPC &mt LSHIFT ESC
                        >;
                };
                pairs_layer {
// -----------------------------------------------------------------------------------------
// |  ~  |  ´  | LBKT | RBKT |     |xxx|     |     |     |     |     |
// | LT  | RT  | LPAR | RPAR |  ?  |xxx|     |     |     |     |_____|
// |     |     | LBRC | RBRC |     |xxx|     |     |     |     |     |
//              |______|_____|_____|xxx|_____|_____|_____|
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp TILDE  &kp SQT    &kp LBKT  &kp RBKT  &none           &none  &none  &none  &none  &none
   &kp LT     &kp GT     &kp LPAR  &kp RPAR  &kp QMARK       &none  &none  &none  &none  &trans
   &none      &none      &kp LBRC  &kp RBRC  &none           &none  &none  &none  &none  &none
                         &trans  &trans  &trans              &trans  &trans  &trans
                        >;
                };
                arrows_layer {
// ----------------------------------------------------------------------------------------
// |     |     |     |     |     |xxx| HOME | PGDWN | PGUP |  EN   | INS |
// |     |     |     |     |     |xxx| LEFT | DOWN  |  UP  | RIGHT |_____|
// |     |     |     |     |     |xxx|     |     |     |     |     |
//            |______|_____|_____|xxx|_____|_____|_____|
// -----------------------------------------------------------------------------------------
                        bindings = <
   &none      &none      &none     &none      &none                    &kp HOME  &kp PG_DN          &kp PG_UP          &kp END    &none
   &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT   &kp LC(LS(MINUS))        &kp LEFT  &kp DOWN           &kp UP             &kp RIGHT  &trans
   &none      &none      &none     &kp PSCRN  &none                    &none     &kp K_SCROLL_DOWN  &kp K_SCROLL_DOWN  &none      &none
                           &trans  &trans     &trans                   &trans  &trans  &trans
                        >;
                };
                symbols_layer {
// -----------------------------------------------------------------------------------------
// |     |  %  |  @  |  '  |  _  |xxx|  ^  |  =  |  #  |  |  |     |
// |     |  !  |  /  |  "  |  -  |xxx|  *  |  :  |  +  |  \  |_____|
// |     |     |  ~  |  $  |     |xxx|     |  &  |  ´  |     |  ;  |
//            |______|_____|_____|xxx|_____|_____|_____|
// -----------------------------------------------------------------------------------------
                        bindings = <
   &none  &kp PRCNT  &kp AT     &kp RA(SQT)   &kp UNDER           &kp CARET  &kp EQUAL  &kp HASH   &kp PIPE  &none
   &none  &kp EXCL   &kp FSLH   &kp RA(DQT)   &kp MINUS           &kp ASTRK  &kp COLON  &kp PLUS   &kp NUBS  &trans
   &none  &none      &kp TILDE  &kp DLLR      &none               &none      &kp AMPS   &kp GRAVE  &none     &kp SEMI
                                 &trans  &trans  &trans           &trans  &trans  &trans
                        >;
                };
                numpad_layer {
// -----------------------------------------------------------------------------------------
// |  F3  |  F6  |  F9  |  F12 |  F15 |xxx|  .  |  7  |  8  |  9  |  *  |
// |  F2  |  F5  |  F8  |  F11 |  F14 |xxx|  0  |  4  |  5  |  6  |_____|
// |  F1  |  F4  |  F7  |  F10 |  F13 |xxx|  -  |  1  |  2  |  3  |  +  |
//                 |______|_____|_____|xxx|_____|_____|_____|
// -----------------------------------------------------------------------------------------
                        bindings = <
   &kp F3  &kp F6  &kp F9  &kp F12  &kp F15           &kp DOT    &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY
   &kp F2  &kp F5  &kp F8  &kp F11  &kp F14           &kp N0     &kp N4  &kp N5  &kp N6  &trans
   &kp F1  &kp F4  &kp F7  &kp F10  &kp F13           &kp MINUS  &kp N1  &kp N2  &kp N3  &kp KP_PLUS
                     &trans  &trans  &trans           &trans  &trans  &trans
                        >;
                };
                config_layer {
// -----------------------------------------------------------------------------------------
// |    |    |    | BT_N   |   |xxx|    | VOL_U  | MED_N   | BRI_U  |   |
// |    |    |    | OUT_T  |   |xxx|    | VOL_M  | MED_PP  |        |___|
// |    |    |    | BT_P   |   |xxx|    | VOL_D  | MED_P   | BRI_D  |   |
//              |____|____|____|xxx|____|____|____|
// -----------------------------------------------------------------------------------------
                        bindings = <
   &none  &none  &none  &bt BT_NXT    &none        &none  &kp K_VOL_UP  &kp K_NEXT  &kp C_BRI_UP  &none
   &none  &none  &none  &out OUT_TOG  &none        &none  &kp K_MUTE    &kp K_PP    &none         &trans
   &none  &none  &none  &bt BT_PRV    &none        &none  &kp K_VOL_DN  &kp K_PREV  &kp C_BRI_DN  &none
                     &trans  &trans  &trans        &trans  &trans  &trans
                        >;
                };
        };
};
